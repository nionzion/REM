<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:REM">


    <!-- Context Menu -->
    <Style TargetType="{x:Type MenuItem}" x:Key="ContextMenuItem">
        <Setter Property="Foreground" Value="{DynamicResource LightGreenBrush}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource LatoThin}"></Setter>
        <Setter Property="Background" Value="{DynamicResource DarkGrayBrush}"></Setter>
        <Setter Property="Padding" Value="0,15"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>

    </Style>
    <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource DarkGrayBrush}"></Setter>
    </Style>

    <Style x:Key="ProtoContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="Black"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="DarkGray" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Padding"
                                    Value="0,0,0,0" />
                            <Setter TargetName="Border"
                                    Property="CornerRadius"
                                    Value="3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Control Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="BorderThickness" Value="0"></Setter>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Viewbox>
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>

    </Style>



    <!-- Window Control Button V.2 -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControl">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverGrayBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Back Button -->
    <Style TargetType="{x:Type Button}" x:Key="BackButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource LightGreenBrush}" />
                <Setter Property="Cursor" Value=""></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"></Setter>
            </Trigger>


            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="1.15" Duration="0:0:0.05"></DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="1" To="1.15" Duration="0:0:0.05"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1.15" To="1" Duration="0:0:0.05"></DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="1.15" To="1" Duration="0:0:0.05"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Style.Triggers>
    </Style>


    <!-- ToggleButton -->
    <Style TargetType="{x:Type Button}" x:Key="ToggleButton" BasedOn="{StaticResource WindowControl}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverGrayBrush}" />
                <Setter Property="Cursor" Value="Hand"></Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- NoEffect -->
    <Style TargetType="{x:Type Button}" x:Key="NoEffectButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />

            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- IconGrowButton -->
    <Style TargetType="{x:Type Button}" x:Key="IconGrowingButton" BasedOn="{StaticResource WindowControl}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ScaleTransform.ScaleX" Value="1.3"></Setter>
                <Setter Property="ScaleTransform.ScaleY" Value="1.3"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="IconGrow">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ScaleTransform.ScaleX" Value="1.3"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="ScaleTransform.ScaleY" Value="1.3"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControl}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource LightRedBrush}" />
            </Trigger>
        </Style.Triggers>


    </Style>


    <Style x:Key="ItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="gd" Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}},Path=Background}" Padding="7" BorderThickness="0" Margin="0">

                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                            <Setter TargetName="gd"  Property="Background" Value="{StaticResource GreenBrush}"></Setter>
                            <Setter TargetName="gd"  Property="TextElement.Foreground" Value="{StaticResource DarkGrayBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomCombo" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>

                        <ToggleButton 
                    Name="ToggleButton" 
                    Template="{DynamicResource ComboBoxToggleButton}" 
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="{DynamicResource LightGreenBrush}"
                            FontSize="16"
                    Grid.Column="2" 
                    Focusable="false"
                    IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                    ClickMode="Press">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="Ansicht" Foreground="{DynamicResource LightGreenBrush}"/>
                                <TextBlock Text="{StaticResource FontAwesomeDoubleDownArrowIcon}" Foreground="{DynamicResource LightGreenBrush}" FontFamily="{StaticResource FontAwesome}" VerticalAlignment="Center" Margin="8,5,0,0"></TextBlock>
                            </StackPanel>
                        </ToggleButton>
                        <ContentPresenter
                        Name="ContentSite"
                        IsHitTestVisible="False" 
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        Margin="0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                        Style="{x:Null}" 
                        Template="{Binding Text}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center"
                        Margin="0"
                        Focusable="True" 
                        Background="{DynamicResource LightGreenBrush}"
                        Visibility="Hidden"
                        Foreground="{DynamicResource LightGreenBrush}"
                        IsReadOnly="{TemplateBinding IsReadOnly}" Text="Ansicht"/>
                        <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                            <Grid 
                          Name="DropDown"
                          SnapsToDevicePixels="True"                
                          MinWidth="{TemplateBinding ActualWidth}"
                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource LightGreenBrush}"
                                BorderThickness="0"
                                BorderBrush="{DynamicResource LightGreenBrush}"/>
                                <ScrollViewer Margin="0,6,0,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#373737"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0,0,4,4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                        </Trigger>

                        <Trigger Property="Grid.IsMouseOver" Value="True">
                            <Setter Property="Grid.Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEditable"
           Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


    <Style TargetType="ComboBox" x:Key="ComboBoxTransparent" BasedOn="{StaticResource CustomCombo}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>


    </Style>


</ResourceDictionary>